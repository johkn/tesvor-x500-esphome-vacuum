esphome:
  name: x500
  friendly_name: vacuum XY

esp8266:
  board: esp01_1m

logger:
  baud_rate: 0

ota:
  platform: esphome
  password: !secret ota_password

api:
  encryption:
    key: !secret api_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
#
# charging            AA,1C,06,00,00,00,06,00,02,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,1A,28
# cleaning            AA,1C,06,00,00,00,02,00,02,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,21,2C
# idel                AA,1C,06,00,00,00,04,00,02,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,21,2D
# docked              AA,1C,06,00,00,00,08,00,02,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,63,73  
#
uart:
 - id: uart_bus
   tx_pin: 1
   rx_pin: 3
   baud_rate: 115200
   debug:
    direction: BOTH
    dummy_receiver: true
    after:
      delimiter: "\r\n"
    sequence:
      - lambda: |-
          UARTDebug::log_hex(direction, bytes, ' ');

          if (bytes.size()==31) {
            if(bytes[6]==0x08)
              id(rawstate).publish_state("docked");
            if(bytes[6]==0x06)
              id(rawstate).publish_state("charging");
            if(bytes[6]==0x04)
              id(rawstate).publish_state("idle");                
            if(bytes[6]==0x02)
              id(rawstate).publish_state("cleaning");                         
          }

text_sensor:
  - platform: template
    id: rawstate
    name: state
#
#Smart Cleaning:  aa 03 02 22 02 26
#Spot Cleaning:   aa 03 02 22 01 25
#Edge Cleaning:   aa 03 02 22 00 24 
#Stop:            aa 03 02 26 00 28
#Go Charge:       aa 03 02 22 03 27
#Move Front:      aa 03 02 21 00 23 aa 03 02 21 04 27
#Move Back:       aa 03 02 21 03 26 aa 03 02 21 04 27
#Turn Left:       aa 03 02 21 01 24 aa 03 02 21 04 27
#Turn Right:      aa 03 02 21 02 25 aa 03 02 21 04 27  
#   
button:
  - platform: template
    name: "Smart Cleaning"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x22, 0x02, 0x26]
  - platform: template
    name: "Spot Cleaning"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x22, 0x01, 0x25]
  - platform: template
    name: "Edge Cleaning"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x22, 0x00, 0x24]
  - platform: template
    name: "Stop"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x26, 0x00, 0x28]
  - platform: template
    name: "Go Charge"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x22, 0x03, 0x27]
  - platform: template
    name: "Move Front"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x21, 0x00, 0x23, 0xAA, 0x03, 0x02, 0x21, 0x04, 0x27]
  - platform: template
    name: "Move Back"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x21, 0x03, 0x26, 0xAA, 0x03, 0x02, 0x21, 0x04, 0x27]
  - platform: template
    name: "Move Left"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x21, 0x01, 0x24, 0xAA, 0x03, 0x02, 0x21, 0x04, 0x27]
  - platform: template
    name: "Move Right"
    on_press:
      then:
      - uart.write: [0xAA, 0x03, 0x02, 0x21, 0x02, 0x25, 0xAA, 0x03, 0x02, 0x21, 0x04, 0x27]                  